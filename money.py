import streamlit as st
import numpy as np
import pandas as pd
import plotly.graph_objects as go
import matplotlib.font_manager as fm

# üîπ ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
font_path = "C:/Windows/Fonts/THSarabunNew.ttf"  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á
font_prop = fm.FontProperties(fname=font_path)

# üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏õ
st.title("üìä ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡∏à‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô")

# üîπ ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡∏±‡∏ß
old_year = st.number_input("‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏õ‡∏µ)", max_value=60, value=15, step=1)
# üîπ ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏≠‡∏≤‡∏¢‡∏∏‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£
work_year = st.number_input("‡∏≠‡∏≤‡∏¢‡∏∏‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£ (‡∏õ‡∏µ)", min_value=0, value=25, step=1)

# üîπ ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 8 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á (4 ‡∏õ‡∏µ) -> 1 ‡∏õ‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
st.subheader("üìå ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 8 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á (4 ‡∏õ‡∏µ)")
cols = st.columns(8)  # ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô 8 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
salaries = []
for i in range(8):
    with cols[i]:  
        salary = st.number_input(f"‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á {i+1}", min_value=0, value=30000, step=1000, key=f"salary_{i}")
        salaries.append(salary)

# üîπ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç
salary_avg = sum(salaries) / len(salaries)  # ‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á 8 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
pension = salary_avg * work_year / 50  # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç
pension = min(pension, salary_avg * 0.7)  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 70% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢

# üîπ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
st.subheader("üí∞ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç")
st.write(f"üîπ **‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á:** {salary_avg:,.2f} ‡∏ö‡∏≤‡∏ó")
st.write(f"üîπ **‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏à‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢):** {pension:,.2f} ‡∏ö‡∏≤‡∏ó")

# üîπ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏•‡∏∞ 2.25% ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏õ‡∏µ)
st.subheader("üìà ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï")
future_years = min(60-old_year, old_year)  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡∏±‡∏ß‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 60 ‡∏õ‡∏µ
predicted_salaries = [salaries[-1]]  # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å

for _ in range(future_years * 2):  # *2 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏µ‡∏•‡∏∞ 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    next_salary = predicted_salaries[-1] * 1.0225  # ‡πÄ‡∏û‡∏¥‡πà‡∏° 2.25% ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    predicted_salaries.append(next_salary)

# üîπ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô
predicted_pensions = []
for salary in predicted_salaries:
    predicted_pension = salary * work_year / 50  # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡∏à‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    predicted_pension = min(predicted_pension, salary * 0.7)  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 70% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    predicted_pensions.append(predicted_pension)

# üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ (‡πÉ‡∏ä‡πâ plotly)
fig = go.Figure()

# ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
fig.add_trace(go.Scatter(
    x=np.arange(work_year, work_year + len(predicted_salaries) / 2, 0.5),
    y=predicted_salaries,
    mode='lines+markers',
    name='‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢',
    marker=dict(color='blue'),
    hovertemplate="‡∏õ‡∏µ: %{x}<br>‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: %{y:,.2f} ‡∏ö‡∏≤‡∏ó"
))

# ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
fig.add_trace(go.Scatter(
    x=np.arange(work_year, work_year + len(predicted_salaries) / 2, 0.5),
    y=predicted_pensions,
    mode='lines+markers',
    name='‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢',
    marker=dict(color='red'),
    hovertemplate="‡∏õ‡∏µ: %{x}<br>‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç: %{y:,.2f} ‡∏ö‡∏≤‡∏ó"
))

# ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏£‡∏≤‡∏ü
fig.update_layout(
    title="üìä ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≥‡∏ô‡∏≤‡∏ç‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï",
    xaxis_title="‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£",
    yaxis_title="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)",
    template="plotly_dark",
    showlegend=True
)

# ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü
st.plotly_chart(fig)
